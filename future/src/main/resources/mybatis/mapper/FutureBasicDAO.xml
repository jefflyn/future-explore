<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.guru.future.mapper.FutureBasicDAO">
  <resultMap id="BaseResultMap" type="com.guru.future.common.entity.dao.FutureBasicDO">
    <id column="symbol" jdbcType="VARCHAR" property="symbol" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="profit" jdbcType="INTEGER" property="profit" />
    <result column="night" jdbcType="TINYINT" property="night" />
    <result column="exchange" jdbcType="VARCHAR" property="exchange" />
    <result column="amount" jdbcType="INTEGER" property="amount" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="relative" jdbcType="VARCHAR" property="relative" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="deleted" jdbcType="TINYINT" property="deleted" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    symbol, `name`, `type`, profit, night, exchange, amount, unit, `relative`, remark, 
    deleted, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from basic
    where symbol = #{symbol,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from basic
    where symbol = #{symbol,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.guru.future.common.entity.dao.FutureBasicDO">
    insert into basic (symbol, `name`, `type`, 
      profit, night, exchange, 
      amount, unit, `relative`, 
      remark, deleted, update_time
      )
    values (#{symbol,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{profit,jdbcType=INTEGER}, #{night,jdbcType=TINYINT}, #{exchange,jdbcType=VARCHAR}, 
      #{amount,jdbcType=INTEGER}, #{unit,jdbcType=VARCHAR}, #{relative,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{deleted,jdbcType=TINYINT}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.guru.future.common.entity.dao.FutureBasicDO">
    insert into basic
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="symbol != null">
        symbol,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="profit != null">
        profit,
      </if>
      <if test="night != null">
        night,
      </if>
      <if test="exchange != null">
        exchange,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="relative != null">
        `relative`,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="symbol != null">
        #{symbol,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="profit != null">
        #{profit,jdbcType=INTEGER},
      </if>
      <if test="night != null">
        #{night,jdbcType=TINYINT},
      </if>
      <if test="exchange != null">
        #{exchange,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="relative != null">
        #{relative,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=TINYINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.guru.future.common.entity.dao.FutureBasicDO">
    update basic
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="profit != null">
        profit = #{profit,jdbcType=INTEGER},
      </if>
      <if test="night != null">
        night = #{night,jdbcType=TINYINT},
      </if>
      <if test="exchange != null">
        exchange = #{exchange,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="relative != null">
        `relative` = #{relative,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=TINYINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where symbol = #{symbol,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.guru.future.common.entity.dao.FutureBasicDO">
    update basic
    set `name` = #{name,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=VARCHAR},
      profit = #{profit,jdbcType=INTEGER},
      night = #{night,jdbcType=TINYINT},
      exchange = #{exchange,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=INTEGER},
      unit = #{unit,jdbcType=VARCHAR},
      `relative` = #{relative,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      deleted = #{deleted,jdbcType=TINYINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where symbol = #{symbol,jdbcType=VARCHAR}
  </update>
</mapper>