<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--suppress ALL -->
<mapper namespace="com.guru.future.mapper.BasicDAO">
    <resultMap id="BaseResultMap" type="com.guru.future.common.entity.dao.FutureBasicDO">
        <id column="symbol" jdbcType="VARCHAR" property="symbol"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="relative" jdbcType="VARCHAR" property="relative"/>
        <result column="profit" jdbcType="INTEGER" property="profit" />
        <result column="night" jdbcType="TINYINT" property="night" />
        <result column="exchange" jdbcType="VARCHAR" property="exchange" />
        <result column="amount" jdbcType="INTEGER" property="amount" />
        <result column="unit" jdbcType="VARCHAR" property="unit" />
        <result column="relative" jdbcType="VARCHAR" property="relative" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="deleted" jdbcType="TINYINT" property="deleted" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />

    </resultMap>

    <sql id="Base_Column_List">
        symbol, `name`, `type`, profit, night, exchange, amount, unit, `relative`, remark,
    deleted, update_time
    </sql>

    <select id="selectBySymbol" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from basic
        where symbol = #{symbol,jdbcType=VARCHAR} and deleted = 0
    </select>

    <select id="selectByQuery" resultType="com.guru.future.common.entity.dao.FutureBasicDO">
        select
        <include refid="Base_Column_List"/>
        from basic
        where deleted = 0
        <if test="symbol != null">
            and symbol = #{symbol}
        </if>
        <if test="name != null">
            and name = LIKE concat('%',#{name},'%')
        </if>
        <if test="type != null">
            and type = #{type}
        </if>
        <if test="codes != null and codes.size() > 0">
            and code in
            <foreach collection="codes" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </if>

    </select>

    <update id="updateByCodeSelective" parameterType="com.guru.future.common.entity.dao.FutureBasicDO">
        update basic
        <set>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                `type` = #{type,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                code = #{code,jdbcType=VARCHAR},
            </if>
            <if test="low != null">
                low = #{low,jdbcType=DECIMAL},
            </if>
            <if test="high != null">
                high = #{high,jdbcType=DECIMAL},
            </if>
            <if test="a != null">
                a = #{a,jdbcType=DECIMAL},
            </if>
            <if test="b != null">
                b = #{b,jdbcType=DECIMAL},
            </if>
            <if test="c != null">
                c = #{c,jdbcType=DECIMAL},
            </if>
            <if test="d != null">
                d = #{d,jdbcType=DECIMAL},
            </if>
            <if test="amount != null">
                amount = #{amount,jdbcType=INTEGER},
            </if>
            <if test="unit != null">
                unit = #{unit,jdbcType=VARCHAR},
            </if>
            <if test="night != null">
                night = #{night,jdbcType=TINYINT},
            </if>
            <if test="exchange != null">
                exchange = #{exchange,jdbcType=VARCHAR},
            </if>
            <if test="deleted != null">
                deleted = #{deleted,jdbcType=TINYINT},
            </if>
            <if test="code != null">
                update_time = now(),
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
        </set>
        where code = #{code,jdbcType=VARCHAR}
    </update>

</mapper>